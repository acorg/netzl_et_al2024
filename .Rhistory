geom_line(aes(y = mean_frac)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
#  geom_line(aes(y = mean_frac)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_line(aes(y = mean_frac), color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_line(aes(y = mean_frac, group = Study), color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = mean_frac)) +
geom_line()
studies_f %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = mean_frac, group = Study)) +
geom_line()
studies_f %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
arrange(mean_frac) %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
arrange(mean_frac) %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
arrange(mean_frac)
studies_f %>%
arrange(mean_frac)
studies_f %>%
arrange(mean_frac) %>%
#  filter(Study == "Krammer") %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f <- studies %>%
filter(!is.na(N.female.)) %>%
mutate(frac_female = as.numeric(N.female.)/as.numeric(Number.of.sera)) %>%
group_by(Study) %>%
mutate(mean_frac = mean(frac_female)) %>%
ungroup() %>%
arrange(mean_frac)
View(studies_f)
studies_f %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f$Study <- factor(studies_f$Study, levels = unique(studies_f$Study))
studies_f %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
View(studies_f)
View(studies_f)
studies_f <- studies %>%
filter(!is.na(N.female.))
View(studies_f)
studies_f <- studies %>%
mutate(frac_female = as.numeric(N.female.)/as.numeric(Number.of.sera)) %>%
filter(!is.na(frac_female)) %>%
group_by(Study) %>%
mutate(mean_frac = mean(frac_female)) %>%
ungroup() %>%
arrange(mean_frac)
studies_f$Study <- factor(studies_f$Study, levels = unique(studies_f$Study))
studies_f %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1))
studies_f %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1)) +
ylab("Fraction of female study particpants")
studies_f %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1)) +
ylab("Fraction of female subjects")
studies_f %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1)) +
ylab("Fraction of female subjects") -> p
studies$Study[grep("nch", studies$Study)]
studies$Study[grep("nch", studies$Study)] <- "MÃ¼nch"
studies_f <- studies %>%
mutate(frac_female = as.numeric(N.female.)/as.numeric(Number.of.sera)) %>%
filter(!is.na(frac_female)) %>%
group_by(Study) %>%
mutate(mean_frac = mean(frac_female)) %>%
ungroup() %>%
arrange(mean_frac)
studies_f$Study <- factor(studies_f$Study, levels = unique(studies_f$Study))
studies_f %>%
ggplot(aes(x = Study, y = frac_female)) +
geom_hline(yintercept = 0.5, linetype = "dashed") +
geom_point(aes(group = Sera.details.long), position = position_dodge(width = 0.6), alpha = 0.6) +
geom_point(aes(y = mean_frac), shape = 21, fill = "transparent", color = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(c(0,1)) +
ylab("Fraction of female subjects") -> p
p
ggsave(file.path(figures_dir, "fraction_of_female.png"), p, dpi = 300, width = 12, height = 5)
source("~/Documents/smith/labbook/netzl_et_al2024/code/plotting/fold_change_final_to_single_study_comparison.R")
View(cum_means)
#----------------- load and prepare data
forest_data_b <- read.csv(table_path)
forest_data <- format_table_forest_plots(forest_data_b) %>%
filter(Webplotdigitizer != "y")
View(cum_means)
View(forest_data_sub)
# forest_data_plot <- calculate_mean_over_time(forest_data_sub, dates, since_first = TRUE)
target_sr_groups <- c("WT conv","2x Vax", "3x Vax", "Vax + BA.1")
cum_means <- calculate_cumulative_mean(forest_data_sub %>%
filter(`Comparator antigen` == "D614G") %>%
filter(standardise_encounters %in% target_sr_groups) %>%
filter(OmicronVariant == "BA.1"), dates)
View(cum_means)
final_mean <- cum_means %>%
filter(date_group == max(cum_means$date_group))
View(final_mean)
forest_data_b <- format_table_forest_plots(forest_data_b) %>%
filter(Webplotdigitizer != "y")
# filter to select studies
forest_data_b %>%
filter(Study %in% c("Kimpel"))
#----------------- load and prepare data
forest_data_b <- read.csv(table_path)
forest_data_b <- format_table_forest_plots(forest_data_b) %>%
filter(Webplotdigitizer != "y")
View(forest_data_b)
unique(forest_data_b$Study)
grepl("Montefiori", forest_data_b$Study)
forest_data_b$Study[grepl("Montefiori", forest_data_b$Study)]
# filter to select studies
forest_data_b %>%
mutate(`Comparator antigen` = gsub("WT", "D614G", `Comparator antigen`)) %>%
mutate(log_fold_change = -log_fold_change) %>%
filter(Study %in% c("Kimpel/Roessler", "Montefiori/Doria-Rose")) %>%
filter(standardise_encounters %in% target_sr_groups) %>%
filter(`Copmarator antigen` == "D614G") %>%
filter(OmicronVariant == "BA.1")
# filter to select studies
forest_data_b %>%
mutate(`Comparator antigen` = gsub("WT", "D614G", `Comparator antigen`)) %>%
mutate(log_fold_change = -log_fold_change) %>%
filter(Study %in% c("Kimpel/Roessler", "Montefiori/Doria-Rose")) %>%
filter(standardise_encounters %in% target_sr_groups) %>%
filter(`Comparator antigen` == "D614G") %>%
filter(OmicronVariant == "BA.1")
# filter to select studies
forest_data_b %>%
mutate(`Comparator antigen` = gsub("WT", "D614G", `Comparator antigen`)) %>%
mutate(log_fold_change = -log_fold_change) %>%
filter(Study %in% c("Kimpel/Roessler", "Montefiori/Doria-Rose")) %>%
filter(standardise_encounters %in% target_sr_groups) %>%
filter(`Comparator antigen` == "D614G") %>%
filter(OmicronVariant == "BA.1") %>%
select(Study, standardise_encounters, `Comparator antigen`, OmicronVariant, log_fold_change)
# filter to select studies
forest_data_b %>%
mutate(`Comparator antigen` = gsub("WT", "D614G", `Comparator antigen`)) %>%
mutate(log_fold_change = -log_fold_change) %>%
filter(Study %in% c("Kimpel/Roessler", "Montefiori/Doria-Rose")) %>%
filter(standardise_encounters %in% target_sr_groups) %>%
filter(`Comparator antigen` == "D614G") %>%
filter(OmicronVariant == "BA.1") %>%
select(Study, `Sera details long`, standardise_encounters, `Comparator antigen`, OmicronVariant, log_fold_change)
# filter to select studies
forest_data_b %>%
mutate(`Comparator antigen` = gsub("WT", "D614G", `Comparator antigen`)) %>%
mutate(log_fold_change = -log_fold_change) %>%
filter(Study %in% c("Kimpel/Roessler", "Montefiori/Doria-Rose")) %>%
filter(standardise_encounters %in% target_sr_groups) %>%
filter(`Comparator antigen` == "D614G") %>%
filter(OmicronVariant == "BA.1") %>%
select(Study, `Sera details long`, standardise_encounters, `Comparator antigen`, OmicronVariant, log_fold_change) -> target_studies
View(final_mean)
# filter to select studies
forest_data_b %>%
mutate(`Comparator antigen` = gsub("WT", "D614G", `Comparator antigen`)) %>%
mutate(log_fold_change = -log_fold_change) %>%
filter(Study %in% c("Kimpel/Roessler", "Montefiori/Doria-Rose")) %>%
filter(standardise_encounters %in% target_sr_groups) %>%
filter(`Comparator antigen` == "D614G") %>%
filter(OmicronVariant == "BA.1") %>%
select(Study, `Sera details long`, standardise_encounters, `Comparator antigen`, OmicronVariant, log_fold_change) %>%
mutate(shape = "sample") -> target_studies
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study)) +
geom_point(position = position_dodge())
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge())
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge(width = 0.4))
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge(width = 0.4)) +
theme_bw()
final_mean <- cum_means %>%
filter(date_group == max(cum_means$date_group)) %>%
mutate(Study = "Average")
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge(width = 0.4)) +
geom_point(data = final_mean)
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_point(data = final_mean)
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_pointrange(data = final_mean, aes(lower = lower, upper = upper)) +
theme_bw()
View(final_mean)
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_pointrange(data = final_mean, aes(ymin = lower, ymax = upper)) +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_pointrange(data = final_mean, aes(ymin = lower, ymax = upper), alpha = 0.5) +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(position = position_dodge(width = 0.5)) +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(position = position_dodge(width = 0.5)) +
xlab("Serum group") +
ylab("Log2 fold change from 614D/G to BA.1") +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(position = position_dodge(width = 0.5)) +
xlab("Serum group") +
ylab("Log2 titer fold change from 614D/G to BA.1") +
ylim(c(0, -7)) +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(position = position_dodge(width = 0.5)) +
xlab("Serum group") +
ylab("Log2 titer fold change from 614D/G to BA.1") +
#  ylim(c(0, -7)) +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(position = position_dodge(width = 0.5)) +
xlab("Serum group") +
ylab("Log2 titer fold change from 614D/G to BA.1") +
ylim(c(-7,0)) +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey20") +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(position = position_dodge(width = 0.5)) +
xlab("Serum group") +
ylab("Log2 titer fold change from 614D/G to BA.1") +
ylim(c(-7,0)) +
theme_bw()
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey20") +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(position = position_dodge(width = 0.5)) +
scale_color_discrete(name = "Data") +
xlab("Serum group") +
ylab("Log2 titer fold change from 614D/G to BA.1") +
ylim(c(-7,0)) +
theme_bw()
ggsave(file.path(path_to_save, "mean_final_fold_drop_to_single_study.pmg"), lowess, dpi = 300, width = 4, height = 3)
ggsave(file.path(path_to_save, "mean_final_fold_drop_to_single_study.png"), lowess, dpi = 300, width = 4, height = 3)
ggsave(file.path(path_to_save, "mean_final_fold_drop_to_single_study.png"), p, dpi = 300, width = 4, height = 3)
target_studies %>%
ggplot(aes(x = standardise_encounters, y = log_fold_change, color = Study, group = Study)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey20") +
geom_pointrange(data = final_mean %>%
filter(standardise_encounters != "Vax + BA.1"), aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(position = position_dodge(width = 0.5)) +
scale_color_discrete(name = "Data") +
xlab("Serum group") +
ylab("Log2 titer fold change from 614D/G to BA.1") +
ylim(c(-7,0)) +
theme_bw() -> p
ggsave(file.path(path_to_save, "mean_final_fold_drop_to_single_study.png"), p, dpi = 300, width = 4, height = 3)
ggsave(file.path(path_to_save, "mean_final_fold_drop_to_single_study.png"), p, dpi = 300, width = 4, height = 5)
source("~/Documents/smith/labbook/netzl_et_al2024/code/plotting/data_by_country.R")
w_plot
# create world map using ggplot() function
ggplot() +
# geom_map() function takes world coordinates
# as input to plot world map
geom_map(
data = world_coordinates, map = world_coordinates,
aes(long, lat, map_id = region, fill = study_count),
alpha = 0.6
) +
scale_fill_steps(breaks = unique(country_count$n),
name = "# Reports per country") +
new_scale_fill() +
geom_jitter(data = studies, aes(x=long, y= lat, group = Study, fill = standardise_time, width = n, height = n), size = 1.5, shape = 21, alpha = 0.7) +
scale_fill_viridis_c(breaks = time_vals,
labels = time_vals,
name = "Date of report") +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.position = c(0.1, 0.7)) -> w_plot
w_plot
# create world map using ggplot() function
ggplot() +
# geom_map() function takes world coordinates
# as input to plot world map
geom_map(
data = world_coordinates, map = world_coordinates,
aes(long, lat, map_id = region, fill = study_count),
alpha = 0.6
) +
scale_fill_steps(breaks = unique(country_count$n),
name = "# Reports per country") +
new_scale_fill() +
geom_jitter(data = studies, aes(x=long, y= lat, group = Study, fill = standardise_time), width = ifelse(n ==1, 0, 7), height = ifelse(n ==1, 0, 5), size = 1.5, shape = 21, alpha = 0.7) +
scale_fill_viridis_c(breaks = time_vals,
labels = time_vals,
name = "Date of report") +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.position = c(0.1, 0.7)) -> w_plot
# create world map using ggplot() function
ggplot() +
# geom_map() function takes world coordinates
# as input to plot world map
geom_map(
data = world_coordinates, map = world_coordinates,
aes(long, lat, map_id = region, fill = study_count),
alpha = 0.6
) +
scale_fill_steps(breaks = unique(country_count$n),
name = "# Reports per country") +
new_scale_fill() +
geom_jitter(data = studies %>%
filter(n >= 5), aes(x=long, y= lat, group = Study, fill = standardise_time), width = 7, height = 5, size = 1.5, shape = 21, alpha = 0.7) +
geom_jitter(data = studies %>%
filter(n < 5), aes(x=long, y= lat, group = Study, fill = standardise_time), width = 1, height = 1, size = 1.5, shape = 21, alpha = 0.7) +
scale_fill_viridis_c(breaks = time_vals,
labels = time_vals,
name = "Date of report") +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.position = c(0.1, 0.7)) -> w_plot
w_plot
# create world map using ggplot() function
ggplot() +
# geom_map() function takes world coordinates
# as input to plot world map
geom_map(
data = world_coordinates, map = world_coordinates,
aes(long, lat, map_id = region, fill = study_count),
alpha = 0.6
) +
scale_fill_steps(breaks = unique(country_count$n),
name = "# Reports per country") +
new_scale_fill() +
geom_jitter(data = studies %>%
filter(n >= 5), aes(x=long, y= lat, group = Study, fill = standardise_time), width = 7, height = 5, size = 1.5, shape = 21, alpha = 0.7) +
geom_jitter(data = studies %>%
filter(n < 5), aes(x=long, y= lat, group = Study, fill = standardise_time), width = 2, height = 1, size = 1.5, shape = 21, alpha = 0.7) +
scale_fill_viridis_c(breaks = time_vals,
labels = time_vals,
name = "Date of report") +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.position = c(0.1, 0.7)) -> w_plot
w_plot
# create world map using ggplot() function
ggplot() +
# geom_map() function takes world coordinates
# as input to plot world map
geom_map(
data = world_coordinates, map = world_coordinates,
aes(long, lat, map_id = region, fill = study_count),
alpha = 0.6
) +
scale_fill_steps(breaks = unique(country_count$n),
name = "# Reports per country") +
new_scale_fill() +
geom_jitter(data = studies %>%
filter(n >= 5), aes(x=long, y= lat, group = Study, fill = standardise_time), width = 7, height = 5, size = 1.5, shape = 21, alpha = 0.7) +
geom_jitter(data = studies %>%
filter(n < 5), aes(x=long, y= lat, group = Study, fill = standardise_time), width = 2, height = 2, size = 1.5, shape = 21, alpha = 0.7) +
scale_fill_viridis_c(breaks = time_vals,
labels = time_vals,
name = "Date of report") +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.position = c(0.1, 0.7)) -> w_plot
w_plot
ggsave(file.path(figures_dir, "studies_by_country.png"), w_plot, dpi = 300, width = 10, height = 7)
# create world map using ggplot() function
ggplot() +
# geom_map() function takes world coordinates
# as input to plot world map
geom_map(
data = world_coordinates, map = world_coordinates,
aes(long, lat, map_id = region, fill = study_count),
alpha = 0.6
) +
scale_fill_steps(breaks = unique(country_count$n),
name = "# Reports per country") +
new_scale_fill() +
geom_jitter(data = studies %>%
filter(n >= 4), aes(x=long, y= lat, group = Study, fill = standardise_time), width = 7, height = 5, size = 1.5, shape = 21, alpha = 0.7) +
geom_jitter(data = studies %>%
filter(n < 4), aes(x=long, y= lat, group = Study, fill = standardise_time), width = 2, height = 2, size = 1.5, shape = 21, alpha = 0.7) +
scale_fill_viridis_c(breaks = time_vals,
labels = time_vals,
name = "Date of report") +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.position = c(0.1, 0.7)) -> w_plot
ggsave(file.path(figures_dir, "studies_by_country.png"), w_plot, dpi = 300, width = 10, height = 7)
