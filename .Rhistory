sub_rows <- sample(n, length(data), replace = TRUE)
print(data[sub_rows])
summary_stats <- Rmisc::CI(data[sub_rows])
df <- data.frame(n = n,
mean = summary_stats["mean"],
lower = summary_stats["lower"],
upper = summary_stats["upper"])
return(df)
}
n_1 <- random_subset_n_times(data_sub %>%
filter(standardise_encounters == "2x Vax") %>%
pull(log_fold_change), 5, 5)
calc_mean_ci_for_random_subset <- function(data, n){
sub_rows <- sample(n, length(data), replace = TRUE)
print(sub_rows)
print(data[sub_rows])
summary_stats <- Rmisc::CI(data[sub_rows])
df <- data.frame(n = n,
mean = summary_stats["mean"],
lower = summary_stats["lower"],
upper = summary_stats["upper"])
return(df)
}
calc_mean_ci_for_random_subset <- function(data, n){
sub_rows <- sample(n, length(data), replace = TRUE)
print(sub_rows)
# print(data[sub_rows])
summary_stats <- Rmisc::CI(data[sub_rows])
df <- data.frame(n = n,
mean = summary_stats["mean"],
lower = summary_stats["lower"],
upper = summary_stats["upper"])
return(df)
}
n_1 <- random_subset_n_times(data_sub %>%
filter(standardise_encounters == "2x Vax") %>%
pull(log_fold_change), 5, 5)
calc_mean_ci_for_random_subset <- function(data, n){
sub_rows <- sample(length(data), n, replace = TRUE)
print(sub_rows)
# print(data[sub_rows])
summary_stats <- Rmisc::CI(data[sub_rows])
df <- data.frame(n = n,
mean = summary_stats["mean"],
lower = summary_stats["lower"],
upper = summary_stats["upper"])
return(df)
}
n_1 <- random_subset_n_times(data_sub %>%
filter(standardise_encounters == "2x Vax") %>%
pull(log_fold_change), 5, 5)
calc_mean_ci_for_random_subset <- function(data, n){
sub_rows <- sample(length(data), n, replace = TRUE)
summary_stats <- Rmisc::CI(data[sub_rows])
df <- data.frame(n = n,
mean = summary_stats["mean"],
lower = summary_stats["lower"],
upper = summary_stats["upper"])
return(df)
}
random_subset_n_times <- function(data, n_times, n_resamples){
res <- lapply(1:n_times, function(x){
calc_mean_ci_for_random_subset(data, n_resamples) %>%
mutate(n_time = x)
})
res <- do.call(rbind, res)
return(res)
}
n_1 <- random_subset_n_times(data_sub %>%
filter(standardise_encounters == "2x Vax") %>%
pull(log_fold_change), 5, 5)
View(n_1)
vax2_data <- data_sub %>%
filter(standardise_encounters == "2x Vax") %>%
pull(log_fold_change)
bootstrap_list <- list()
for(srg in c("2x Vax", "3x Vax")){
vax_data <- data_sub %>%
filter(standardise_encounters == srg) %>%
pull(log_fold_change)
temp_res <- lapply(1:length(vax_data), function(x){
random_subset_n_times(vax_data, 100, x) %>%
mutate(serum_group = srg)
})
bootstrap_list[[srg]] <- temp_res
}
bootstrap_data <- do.call(rbind, bootstrap_list)
View(bootstrap_data)
temp_res[[1]]
bootstrap_list <- list()
for(srg in c("2x Vax", "3x Vax")){
vax_data <- data_sub %>%
filter(standardise_encounters == srg) %>%
pull(log_fold_change)
temp_res <- lapply(1:length(vax_data), function(x){
random_subset_n_times(vax_data, 100, x) %>%
mutate(serum_group = srg)
})
bootstrap_list[[srg]] <- do.call(rbind, temp_res)
}
set.seed(100)
bootstrap_data <- do.call(rbind, bootstrap_list)
View(bootstrap_data)
source("~/Documents/smith/labbook/netzl_et_al2024/code/plotting/data_boostrapping.R")
View(bootstrap_data)
bootstrap_summary <- bootstrap_data %>%
group_by(n, serum_group) %>%
summarize(lower = Rmisc::CI(mean)["lower"],
upper = Rmisc::CI(mean)["upper"],
mean = Rmics::CI(mean)["mean"])
bootstrap_summary <- bootstrap_data %>%
group_by(n, serum_group) %>%
summarize(lower = Rmisc::CI(mean)["lower"],
upper = Rmisc::CI(mean)["upper"],
mean = Rmisc::CI(mean)["mean"])
View(bootstrap_summary)
# plot it
bootstrap_summary %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_line() +
facet_wrap(~serum_group) +
theme_bw()
source("~/Documents/smith/labbook/netzl_et_al2024/code/plotting/data_boostrapping.R")
# plot it
bootstrap_summary %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_line() +
facet_grid(n_times~serum_group) +
theme_bw()
bootstrap_summary <- bootstrap_data %>%
group_by(n, serum_group, n_times) %>%
summarize(lower = Rmisc::CI(mean)["lower"],
upper = Rmisc::CI(mean)["upper"],
mean = Rmisc::CI(mean)["mean"])
# plot it
bootstrap_summary %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_line() +
facet_grid(n_times~serum_group) +
theme_bw()
# plot it
bootstrap_summary %>%
mutate(n_times = factor(n_times)) %>%
ggplot(aes(x = n, y = mean, color = n_times, fill = n_times )) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_line() +
facet_grid(~serum_group) +
theme_bw()
# plot it
bootstrap_summary %>%
mutate(n_times = factor(n_times)) %>%
ggplot(aes(x = n, y = mean, color = n_times, fill = n_times )) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5, color = NA) +
geom_line() +
facet_grid(~serum_group) +
theme_bw()
# plot it
bootstrap_summary %>%
mutate(n_times = factor(n_times)) %>%
ggplot(aes(x = n, y = mean, color = n_times, fill = n_times )) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
theme_bw()
bootstrap_summary <- bootstrap_data %>%
group_by(n, serum_group, n_times) %>%
summarize(lower = Rmisc::CI(mean)["lower"],
upper = Rmisc::CI(mean)["upper"],
mean = Rmisc::CI(mean)["mean"],
CI_width = upper - lower) %>%
pivot_longer(cols = c("mean", "CI_width"))
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(variable~serum_group) +
theme_bw()
View(bootstrap_summary)
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = value)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(name~serum_group) +
theme_bw()
bootstrap_summary <- bootstrap_data %>%
group_by(n, serum_group, n_times) %>%
summarize(lower = Rmisc::CI(mean)["lower"],
upper = Rmisc::CI(mean)["upper"],
mean = Rmisc::CI(mean)["mean"],
CI_width = upper - lower)
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
theme_bw()
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
theme_bw() -> mean_bootstrap
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
theme_bw() -> ci_width
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
theme_bw()
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) 2^x,
name = "95%CI width") +
theme_bw()
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) round(2^x, 2),
name = "95%CI width") +
theme_bw()
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI width") +
theme_bw()
log2(1.4)
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
breaks = seq(0, 2, 0.2),
name = "95%CI width") +
theme_bw()
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x")
name = "95%CI width") +
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI width") +
theme_bw()
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI of the mean width") +
theme_bw()
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI of the mean width") +
xlab("Number of subsamples") +
theme_bw() -> mean_bootstrap
mean_bootstrap
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-"round(2^x, 2), "x"),
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-",round(2^x, 2), "x"),
name = "Fold change from D614G") +
xlab("Number of subsamples") +
theme_bw() -> mean_bootstrap
mean_bootstrap
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = -mean)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-",round(2^x, 2), "x"),
name = "Fold change from WT") +
xlab("Number of subsamples") +
theme_bw() -> mean_bootstrap
mean_bootstrap
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = -mean)) +
geom_ribbon(aes(ymin = -lower, ymax = -upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-",round(2^x, 2), "x"),
name = "Fold change from WT") +
xlab("Number of subsamples") +
theme_bw() -> mean_bootstrap
mean_bootstrap
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = -mean)) +
geom_ribbon(aes(ymin = -lower, ymax = -upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-",round(2^abs(x), 2), "x"),
name = "Fold change from WT") +
xlab("Number of subsamples") +
theme_bw() -> mean_bootstrap
mean_bootstrap
2^4
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI of the mean width") +
xlab("Number of subsamples") +
theme_bw() -> ci_width
ci_width
mean_boostrap / ci_width
mean_bootstrap / ci_width
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = -mean)) +
geom_ribbon(aes(ymin = -lower, ymax = -upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-",round(2^abs(x), 2), "x"),
name = "Fold change from WT") +
xlab("Number of subsamples") +
theme_bw() +
theme(strip.background = element_blank())-> mean_bootstrap
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI of the mean width") +
xlab("Number of subsamples") +
theme_bw() +
theme(strip.background = element_blank()) -> ci_width
mean_bootstrap / ci_width
mean_bootstrap / ci_width + plot_annotation(tag_levels = "A")
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = -mean)) +
geom_ribbon(aes(ymin = -lower, ymax = -upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-",round(2^abs(x), 2), "x"),
name = "Fold change from WT") +
scale_x_continuous(name = "Number of subsamples",
breaks = seq(0, 100, 5)) +
theme_bw() +
theme(strip.background = element_blank())-> mean_bootstrap
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI of the mean width") +
scale_x_continuous(name = "Number of subsamples",
breaks = seq(0, 100, 5)) +
theme_bw() +
theme(strip.background = element_blank()) -> ci_width
mean_bootstrap / ci_width + plot_annotation(tag_levels = "A")
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = -mean)) +
geom_ribbon(aes(ymin = -lower, ymax = -upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-",round(2^abs(x), 2), "x"),
name = "Fold change from WT") +
scale_x_continuous(name = "Number of subsamples",
breaks = seq(0, 100, 10)) +
theme_bw() +
theme(strip.background = element_blank())-> mean_bootstrap
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI of the mean width") +
scale_x_continuous(name = "Number of subsamples",
breaks = seq(0, 100, 10)) +
theme_bw() +
theme(strip.background = element_blank()) -> ci_width
mean_bootstrap / ci_width + plot_annotation(tag_levels = "A")
# plot it
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = -mean)) +
geom_ribbon(aes(ymin = -lower, ymax = -upper), alpha = 0.2, color = NA) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0("-",round(2^abs(x), 2), "x"),
name = "Fold change from WT") +
scale_x_continuous(name = "Number of subsamples",
breaks = seq(0, 110, 10)) +
theme_bw() +
theme(strip.background = element_blank())-> mean_bootstrap
bootstrap_summary %>%
filter(n_times < 100) %>%
ggplot(aes(x = n, y = CI_width)) +
geom_line() +
facet_grid(~serum_group) +
scale_y_continuous(labels = function(x) paste0(round(2^x, 2), "x"),
name = "95%CI of the mean width") +
scale_x_continuous(name = "Number of subsamples",
breaks = seq(0, 110, 10)) +
theme_bw() +
theme(strip.background = element_blank()) -> ci_width
mean_bootstrap / ci_width + plot_annotation(tag_levels = "A")
mean_bootstrap / ci_width + plot_annotation(tag_levels = "A") -> p
figures_dir <- file.path(working_dir, "figures", "over_time")
ggsave(file.path(figures_dir, table_name, "bootrstrap_n_studies.png"), p, dpi = 300, width = 8, height = 6)
ggsave(file.path(figures_dir, gsub(".csv", "", table_name), "bootrstrap_n_studies.png"), p, dpi = 300, width = 8, height = 6)
source("~/Documents/smith/labbook/netzl_et_al2024/code/plotting/data_boostrapping.R")
unique(bootstrap_data$n_times)
bootstrap_summary <- bootstrap_data %>%
group_by(n, serum_group, n_times) %>%
summarize(lower = Rmisc::CI(mean)["lower"],
upper = Rmisc::CI(mean)["upper"],
mean = Rmisc::CI(mean)["mean"],
CI_width = upper - lower)
View(bootstrap_summary)
source("~/Documents/smith/labbook/netzl_et_al2024/code/summary_tables/create_summary_tables_ba11.R")
forest_ba1 %>%
filter(`Comparator antigen` == comp_antigen) %>%
select(standardise_encounters, OmicronVariant) %>%
table
# make plot
forest_ba1 %>%
filter(`Comparator antigen` == comp_antigen) %>%
filter(OmicronVariant %in% target_variants) %>%
ggplot(aes(x = OmicronVariant, y = Log2Omi, group = `Sera details long`)) +
geom_line() +
geom_point() +
xlab("Omicron lineage") +
scale_y_continuous(labels = function(x) round(2^x*10),
breaks = -1:8,
name = "Neutralization titer") +
facet_wrap(~ standardise_encounters, ncol = length(target_sr_groups)) +
theme_bw() +
theme(strip.background.x = element_blank()) -> p
library(ggplot2)
# make plot
forest_ba1 %>%
filter(`Comparator antigen` == comp_antigen) %>%
filter(OmicronVariant %in% target_variants) %>%
ggplot(aes(x = OmicronVariant, y = Log2Omi, group = `Sera details long`)) +
geom_line() +
geom_point() +
xlab("Omicron lineage") +
scale_y_continuous(labels = function(x) round(2^x*10),
breaks = -1:8,
name = "Neutralization titer") +
facet_wrap(~ standardise_encounters, ncol = length(target_sr_groups)) +
theme_bw() +
theme(strip.background.x = element_blank()) -> p
p
figures_dir <- file.path(working_dir, "figures", "forest_plots", tab_name, "titers")
ggsave(file.path(figures_dir, paste0("paired_mean_titer_sub-", gsub("docx", "png", summary_tab_name))), p, width = 12, height = 4, units = "in", dpi = 300, )
